user  nginx;
worker_processes  auto;
error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    # https://github.com/puma/puma/blob/master/docs/nginx.md
    upstream backends {
      #server unix:/run/gunicorn/socket;
      server 127.0.0.1:8000 weight=1 max_fails=0 fail_timeout=360;
    }

    server {
      listen 80;
      keepalive_timeout 5;

      client_max_body_size 100M;
      client_body_temp_path   /var/cache/nginx/client_temp;

      gzip on;
      gzip_disable     "MSIE [1-6]\.";
      gzip_vary on;
      gzip_proxied any;
      gzip_min_length  1000;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      #gzip_http_version 1.1;
      gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

      # Buffers
      proxy_temp_path     /var/cache/nginx/temp;
      proxy_max_temp_file_size 8192m;
      proxy_buffers 8 64k;
      proxy_buffer_size 64k;

      # static files
      root /app/public;

      location / {
        try_files $uri /index.html;
      }

      location ~* ^/(api|status|graphql|users|admin|media|login|logout|download|password|password_reset|email) {
          proxy_set_header X-Real-IP  $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;

          client_max_body_size 20M;
          # static files

          proxy_pass http://backends;
      }

      location ~* \.(ico|css|gif|jpe?g|png|js)(\?[0-9]+)?$ {
        expires max;
        break;
      }
    }
}

